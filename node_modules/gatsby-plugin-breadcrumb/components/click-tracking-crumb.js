"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutPropertiesLoose"));

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _gatsby = require("gatsby");

var _optionsContext = require("./options-context");

var _useBreadcrumb2 = _interopRequireDefault(require("./useBreadcrumb"));

/* eslint-disable import/no-extraneous-dependencies */

/* eslint-disable react/no-array-index-key */
// TODO: Delete before v7 release
var ClickTrackingCrumb = function ClickTrackingCrumb(_ref) {
  var title = _ref.title,
      location = _ref.location,
      crumbLabel = _ref.crumbLabel,
      crumbSeparator = _ref.crumbSeparator,
      crumbWrapperStyle = _ref.crumbWrapperStyle,
      crumbActiveStyle = _ref.crumbActiveStyle,
      crumbStyle = _ref.crumbStyle,
      rest = (0, _objectWithoutPropertiesLoose2["default"])(_ref, ["title", "location", "crumbLabel", "crumbSeparator", "crumbWrapperStyle", "crumbActiveStyle", "crumbStyle"]);

  var _useBreadcrumb = (0, _useBreadcrumb2["default"])({
    location: location,
    crumbLabel: crumbLabel,
    crumbSeparator: crumbSeparator,
    crumbStyle: crumbStyle,
    crumbActiveStyle: crumbActiveStyle
  }),
      _useBreadcrumb$crumbs = _useBreadcrumb.crumbs,
      crumbs = _useBreadcrumb$crumbs === void 0 ? [] : _useBreadcrumb$crumbs;

  var _React$useContext = _react["default"].useContext(_optionsContext.OptionsContext),
      useClassNames = _React$useContext.useClassNames;

  return _react["default"].createElement("div", null, _react["default"].createElement("span", {
    className: "breadcrumb__title"
  }, title), crumbs.map(function (c, i) {
    return _react["default"].createElement("div", {
      className: "breadcrumb",
      style: useClassNames ? null : (0, _extends2["default"])({
        display: 'inline'
      }, crumbWrapperStyle),
      key: i
    }, _react["default"].createElement(_gatsby.Link, (0, _extends2["default"])({
      to: c.pathname || '',
      style: useClassNames ? null : (0, _extends2["default"])({
        textDecoration: 'none',
        fontSize: '16pt',
        color: '#e1e1e1'
      }, c.crumbStyle),
      activeStyle: useClassNames ? null : (0, _extends2["default"])({
        color: 'white'
      }, crumbActiveStyle),
      state: {
        crumbClicked: true
      },
      className: "breadcrumb__link",
      activeClassName: useClassNames ? 'breadcrumb__link__active' : null
    }, rest), c.crumbLabel), _react["default"].createElement("span", {
      className: "breadcrumb__separator",
      style: useClassNames ? null : (0, _extends2["default"])({
        fontSize: '16pt'
      }, c.crumbStyle)
    }, i === crumbs.length - 1 ? null : c.crumbSeparator));
  }));
};

ClickTrackingCrumb.defaultProps = {
  title: '',
  crumbSeparator: ' / ',
  crumbWrapperStyle: {},
  crumbStyle: {},
  crumbActiveStyle: {}
};
ClickTrackingCrumb.propTypes = {
  location: _propTypes["default"].shape().isRequired,
  crumbLabel: _propTypes["default"].string.isRequired,
  title: _propTypes["default"].string,
  crumbSeparator: _propTypes["default"].string,
  crumbWrapperStyle: _propTypes["default"].shape(),
  crumbActiveStyle: _propTypes["default"].shape(),
  crumbStyle: _propTypes["default"].shape()
};
var _default = ClickTrackingCrumb;
exports["default"] = _default;