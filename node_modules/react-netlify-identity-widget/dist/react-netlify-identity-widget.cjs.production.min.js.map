{"version":3,"file":"react-netlify-identity-widget.cjs.production.min.js","sources":["../src/useLoading.tsx","../src/components/login.tsx","../src/components/logout.tsx","../src/components/signup.tsx","../src/components/providers.tsx","../src/app.tsx","../src/index.tsx"],"sourcesContent":["import React from \"react\"\n\nexport default function useLoading() {\n  const [isLoading, setState] = React.useState(false)\n  const mount = React.useRef(false)\n  React.useEffect(() => {\n    mount.current = true\n    return () => void (mount.current = false)\n  }, [])\n  function load<A>(aPromise: Promise<A>) {\n    setState(true)\n    return aPromise.finally(() => mount.current && setState(false))\n  }\n  return [isLoading, load] as [boolean, <A>(aPromise: Promise<A>) => Promise<A>]\n}\n","import React from 'react'\nimport { useIdentityContext, User } from 'react-netlify-identity'\nimport useLoading from '../useLoading'\nimport VisuallyHidden from '@reach/visually-hidden'\n\ntype LoginProps = {\n  onLogin?: (user?: User) => void\n}\n\nexport function Login({ onLogin }: LoginProps) {\n  const { loginUser } = useIdentityContext()\n  const formRef = React.useRef<HTMLFormElement>(null)\n  const [msg, setMsg] = React.useState('')\n  const [isLoading, load] = useLoading()\n  return (\n    <form\n      ref={formRef}\n      className=\"form\"\n      onSubmit={(e: React.SyntheticEvent) => {\n        e.preventDefault()\n        const target = e.target as typeof e.target & { email: { value: string }; password: { value: string } }\n        const email = target.email.value\n        const password = target.password.value\n        load(loginUser(email, password, true))\n          .then((user) => {\n            if (process.env.NODE_ENV !== 'production') console.log('Success! Logged in', user)\n            if (onLogin) onLogin(user)\n          })\n          .catch((err) => void console.error(err) || setMsg('Error: ' + err.message))\n      }}\n    >\n      <div className=\"RNIW_formGroup\" key=\"email\">\n        <label>\n          <VisuallyHidden>Enter your email</VisuallyHidden>\n          <input\n            className=\"RNIW_formControl\"\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Email\"\n            autoCapitalize=\"off\"\n            required={true}\n          />\n          <div className=\"RNIW_inputFieldIcon RNIW_inputFieldEmail\" />\n        </label>\n      </div>\n      <div className=\"RNIW_formGroup\" key=\"password\">\n        <label>\n          <VisuallyHidden>Enter your password</VisuallyHidden>\n          <input className=\"RNIW_formControl\" type=\"password\" name=\"password\" placeholder=\"Password\" required={true} />\n          <div className=\"RNIW_inputFieldIcon RNIW_inputFieldPassword\" />\n        </label>\n      </div>\n\n      <div>\n        <button type=\"submit\" className={isLoading ? 'RNIW_btn RNIW_saving' : 'RNIW_btn'}>\n          Log in\n        </button>\n        {msg && <pre style={{ background: 'salmon', padding: 10 }}>{msg}</pre>}\n      </div>\n      <button type=\"button\" className=\"RNIW_btnLink forgotPasswordLink\">\n        Forgot password?\n      </button>\n    </form>\n  )\n}\n","import React from 'react'\nimport { useIdentityContext } from 'react-netlify-identity'\nimport useLoading from '../useLoading'\n\ntype LogoutProps = {\n  onLogout?: () => void\n}\n\nexport function Logout({ onLogout }: LogoutProps) {\n  const identity = useIdentityContext()\n  const [msg, setMsg] = React.useState('')\n  const name =\n    (identity && identity.user && identity.user.user_metadata && identity.user.user_metadata.full_name) || 'NoName'\n\n  const [isLoading, load] = useLoading()\n  const logout = () =>\n    load(identity.logoutUser())\n      .then(() => {\n        if (onLogout) onLogout()\n      })\n      .catch((err) => void console.error(err) || setMsg('Error: ' + err.message))\n  return (\n    <>\n      <div className=\"RNIW_header\">\n        <button className=\"RNIW_btn RNIW_btnHeader active\">Logged in</button>\n      </div>\n      <form className=\"form \">\n        <p className=\"RNIW_infoText\">\n          Logged in as <br />\n          <span className=\"RNIW_infoTextEmail\">{name}</span>\n        </p>\n        <button type=\"submit\" className={isLoading ? 'RNIW_btn RNIW_saving' : 'RNIW_btn'} onClick={logout}>\n          Log out\n        </button>\n        {msg && <pre style={{ background: 'salmon', padding: 10 }}>{msg}</pre>}\n      </form>\n    </>\n  )\n}\n","import React from 'react'\nimport { User, useIdentityContext } from 'react-netlify-identity'\nimport useLoading from '../useLoading'\nimport VisuallyHidden from '@reach/visually-hidden'\n\ntype SignupProps = {\n  onSignup?: (user?: User) => void\n}\nexport function Signup({ onSignup }: SignupProps) {\n  const { signupUser } = useIdentityContext()\n  const formRef = React.useRef<HTMLFormElement>(null)\n  const [msg, setMsg] = React.useState('')\n  const [isLoading, load] = useLoading()\n  const signup = () => {\n    if (!formRef.current) return\n    const full_name = formRef.current.username.value\n    const email = formRef.current.email.value\n    const password = formRef.current.password.value\n    const data = { signupSource: 'react-netlify-identity-widget', full_name }\n    load(signupUser(email, password, data))\n      .then((user) => {\n        if (process.env.NODE_ENV !== 'production') console.log('Success! Signed up', user)\n        if (onSignup) onSignup(user)\n      })\n      .catch((err) => void console.error(err) || setMsg('Error: ' + err.message))\n  }\n  return (\n    <form\n      ref={formRef}\n      className=\"form\"\n      onSubmit={(e: React.SyntheticEvent) => {\n        e.preventDefault()\n        signup()\n      }}\n    >\n      <div className=\"RNIW_formGroup\" key=\"username\">\n        <label>\n          <VisuallyHidden>Enter your name</VisuallyHidden>\n          <input\n            id=\"username\"\n            className=\"RNIW_formControl\"\n            type=\"name\"\n            name=\"username\"\n            placeholder=\"Name\"\n            autoCapitalize=\"off\"\n            required={true}\n          />\n          <div className=\"RNIW_inputFieldIcon RNIW_inputFieldName\" />\n        </label>\n      </div>\n      <div className=\"RNIW_formGroup\" key=\"email\">\n        <label>\n          <VisuallyHidden>Enter your email</VisuallyHidden>\n          <input\n            className=\"RNIW_formControl\"\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Email\"\n            autoCapitalize=\"off\"\n            required={true}\n          />\n          <div className=\"RNIW_inputFieldIcon RNIW_inputFieldEmail\" />\n        </label>\n      </div>\n      <div className=\"RNIW_formGroup\" key=\"password\">\n        <label>\n          <VisuallyHidden>Enter your password</VisuallyHidden>\n          <input className=\"RNIW_formControl\" type=\"password\" name=\"password\" placeholder=\"Password\" required={true} />\n          <div className=\"RNIW_inputFieldIcon RNIW_inputFieldPassword\" />\n        </label>\n      </div>\n      <div>\n        <button type=\"submit\" className={isLoading ? 'RNIW_btn RNIW_saving' : 'RNIW_btn'}>\n          Sign Up\n        </button>\n        {msg && <pre style={{ background: 'salmon', padding: 10 }}>{msg}</pre>}\n      </div>\n    </form>\n  )\n}\n","import React from 'react'\nimport { Settings, useIdentityContext } from 'react-netlify-identity'\n\nexport function Providers() {\n  const { settings } = useIdentityContext()\n  const hasProviders = Object.entries(settings.external).some(\n    ([k, v]) => ['github', 'gitlab', 'bitbucket', 'google'].includes(k) && v,\n  )\n  if (!hasProviders) return null\n  let isLocalhost = false\n  if (typeof window !== 'undefined') {\n    isLocalhost = Boolean(\n      window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n    )\n  }\n  return (\n    <div className=\"providersGroup\">\n      {isLocalhost && (\n        <pre>⚠️Testing providers on localhost won't work because OAuth redirects to your production site</pre>\n      )}\n      <hr className=\"RNIW_hr\" />\n      <ProviderButton settings={settings} provider=\"Google\" />\n      <ProviderButton settings={settings} provider=\"GitHub\" />\n      <ProviderButton settings={settings} provider=\"GitLab\" />\n      <ProviderButton settings={settings} provider=\"Bitbucket\" />\n    </div>\n  )\n}\n\ninterface Dict<T> {\n  [id: string]: T\n}\nfunction ProviderButton({ settings, provider }: { settings: Settings; provider: string }) {\n  const ext = settings.external as Dict<{}>\n  if (!ext[provider.toLowerCase()]) return null\n  const { loginProvider } = useIdentityContext()\n  const click = () => loginProvider(provider.toLowerCase() as 'github' | 'gitlab' | 'bitbucket' | 'google')\n  return (\n    <button onClick={click} className={`provider${provider} RNIW_btn RNIW_btnProvider`}>\n      Continue with {provider}\n    </button>\n  )\n}\n","import React from 'react'\nimport { Login } from './components/login'\nimport { Logout } from './components/logout'\nimport { Signup } from './components/signup'\nimport { User, useIdentityContext } from 'react-netlify-identity'\nimport { Tabs, TabList, Tab, TabPanels, TabPanel } from '@reach/tabs'\n\nimport { Providers } from './components/providers'\nexport type AuthProps = {\n  onLogin?: (user?: User) => void\n  onSignup?: (user?: User) => void\n  onLogout?: () => void\n}\nfunction LoggedOutScreen(props: AuthProps) {\n  return (\n    <div>\n      <Tabs defaultIndex={0}>\n        <TabList className=\"RNIW_header\">\n          <Tab className=\"RNIW_btn RNIW_btnHeader\">Login</Tab>\n          <Tab className=\"RNIW_btn RNIW_btnHeader\">Sign Up</Tab>\n        </TabList>\n\n        <TabPanels>\n          <TabPanel>\n            <Login onLogin={props.onLogin} />\n          </TabPanel>\n          <TabPanel>\n            <Signup onSignup={props.onSignup} />\n          </TabPanel>\n        </TabPanels>\n      </Tabs>\n      <Providers />\n    </div>\n  )\n}\n\nfunction LoggedInScreen(props: AuthProps) {\n  return <Logout onLogout={props.onLogout} />\n}\n\nexport function Widget(props: AuthProps) {\n  const identity = useIdentityContext()\n  const isLoggedIn = Boolean(identity && identity.user)\n  return isLoggedIn ? <LoggedInScreen {...props} /> : <LoggedOutScreen {...props} />\n}\n","import React from 'react'\nimport { Dialog } from '@reach/dialog'\nimport VisuallyHidden from '@reach/visually-hidden'\nimport { Widget, AuthProps } from './app'\n\nimport {\n  IdentityContextProvider as _IdentityContextProvider,\n  useIdentityContext as _useIdentityContext,\n} from 'react-netlify-identity'\nexport { User, Settings, ReactNetlifyIdentityAPI, useNetlifyIdentity } from 'react-netlify-identity'\n\n/** URL of your Netlify Instance with Identity enabled e.g. https://netlify-gotrue-in-react.netlify.com */\n\ntype ModalProps = {\n  /** pass a boolean to be true or false */\n  showDialog: boolean\n  /** modal will call this function to set the state of showDialog to false */\n  onCloseDialog?: () => void\n} & AuthProps\n\nexport const IdentityContextProvider = _IdentityContextProvider\nexport const useIdentityContext = _useIdentityContext\nexport function IdentityModal({ showDialog, onCloseDialog, ...authprops }: ModalProps) {\n  return (\n    <Dialog\n      isOpen={showDialog}\n      onDismiss={onCloseDialog}\n      style={{\n        border: 'solid 5px hsla(0, 0%, 0%, 0.5)',\n        borderRadius: '10px',\n        position: 'relative',\n        maxWidth: 400,\n      }}\n    >\n      <button className=\"RNIW_btn RNIW_btnClose\" onClick={onCloseDialog}>\n        <VisuallyHidden>Close</VisuallyHidden>\n      </button>\n      <Widget {...authprops} />\n    </Dialog>\n  )\n}\nexport default IdentityModal\n"],"names":["useLoading","React","useState","isLoading","setState","mount","useRef","useEffect","current","aPromise","Login","onLogin","loginUser","useIdentityContext","formRef","msg","setMsg","load","ref","className","onSubmit","e","preventDefault","target","email","value","password","then","user","err","console","error","message","key","VisuallyHidden","type","name","placeholder","autoCapitalize","required","style","background","padding","Logout","onLogout","identity","user_metadata","full_name","onClick","logoutUser","Signup","onSignup","signupUser","signupSource","username","id","Providers","settings","Object","entries","external","some","v","includes","isLocalhost","window","Boolean","location","hostname","match","ProviderButton","provider","toLowerCase","loginProvider","LoggedOutScreen","props","Tabs","defaultIndex","TabList","Tab","TabPanels","TabPanel","LoggedInScreen","Widget","isLoggedIn","IdentityContextProvider","_IdentityContextProvider","_useIdentityContext","IdentityModal","showDialog","onCloseDialog","authprops","Dialog","isOpen","onDismiss","border","borderRadius","position","maxWidth"],"mappings":"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"}