{"version":3,"file":"react-netlify-identity.cjs.development.js","sources":["../src/runRoutes.tsx","../src/index.tsx"],"sourcesContent":["import GoTrue, { User } from 'gotrue-js';\n\n/**\n * This code runs on every rerender so keep it light\n * keep checking the current route and do logic based on the route\n * as dictated by netlify identity's communication with us via hashes\n */\n\nconst routes = /(confirmation|invite|recovery|email_change)_token=([^&]+)/;\nconst errorRoute = /error=access_denied&error_description=403/;\nconst accessTokenRoute = /access_token=/;\nconst confirmationRoute = /confirmation_token=/;\n\nexport function runRoutes(\n  gotrue: GoTrue,\n  setUser: (value: User) => User | undefined,\n  remember = true\n) {\n  const hash = (document.location.hash || '').replace(/^#\\/?/, '');\n  if (!hash) return; // early terminate if no hash\n\n  const m = hash.match(routes);\n  if (m) {\n    // store.verifyToken(m[1], m[2]);\n    document.location.hash = '';\n  }\n\n  const em = hash.match(errorRoute);\n  if (em) {\n    // store.openModal(\"signup\");\n    document.location.hash = '';\n  }\n  const params = {} as { [key: string]: string };\n  hash.split('&').forEach(pair => {\n    const [key, value] = pair.split('=');\n    params[key] = value;\n  });\n\n  const am = hash.match(accessTokenRoute);\n  if (am) {\n    if (!!document && params['access_token']) {\n      document.cookie = `nf_jwt=${params['access_token']}`;\n    }\n    document.location.hash = '';\n    // store.openModal(\"login\");\n    // store.completeExternalLogin(params);\n    gotrue\n      .createUser(params, remember)\n      .then(setUser)\n      .catch(console.error);\n  }\n\n  const cm = hash.match(confirmationRoute);\n  if (cm) {\n    document.location.hash = '';\n    // store.openModal(\"login\");\n    // store.completeExternalLogin(params);\n    gotrue\n      .confirm(params['confirmation_token'])\n      .then(setUser)\n      .catch(console.error);\n  }\n}\n","import React from 'react';\n\nimport GoTrue, { User, Settings } from 'gotrue-js';\nimport { runRoutes } from './runRoutes';\n\ntype authChangeParam = (user?: User) => string | void;\n\nexport type Settings = Settings;\nexport type User = User;\n\nconst defaultSettings = {\n  autoconfirm: false,\n  disable_signup: false,\n  external: {\n    bitbucket: false,\n    email: true,\n    facebook: false,\n    github: false,\n    gitlab: false,\n    google: false,\n  },\n};\n\nexport type ReactNetlifyIdentityAPI = {\n  user: User | undefined;\n  /** not meant for normal use! you should mostly use one of the other exported methods to update the user instance */\n  setUser: React.Dispatch<React.SetStateAction<User | undefined>>;\n  isConfirmedUser: boolean;\n  isLoggedIn: boolean;\n  signupUser: (\n    email: string,\n    password: string,\n    data: Object\n  ) => Promise<User | undefined>;\n  loginUser: (\n    email: string,\n    password: string,\n    remember?: boolean\n  ) => Promise<User | undefined>;\n  logoutUser: () => Promise<User | undefined>;\n  requestPasswordRecovery: (email: string) => Promise<void>;\n  recoverAccount: (\n    token: string,\n    remember?: boolean | undefined\n  ) => Promise<User>;\n  updateUser: (fields: { data: object }) => Promise<User | undefined>;\n  getFreshJWT: () => Promise<string>;\n  authedFetch: {\n    get: (endpoint: string, obj?: {}) => Promise<any>;\n    post: (endpoint: string, obj?: {}) => Promise<any>;\n    put: (endpoint: string, obj?: {}) => Promise<any>;\n    delete: (endpoint: string, obj?: {}) => Promise<any>;\n  };\n  _goTrueInstance: GoTrue;\n  _url: string;\n  loginProvider: (\n    provider: 'bitbucket' | 'github' | 'gitlab' | 'google'\n  ) => void;\n  acceptInviteExternalUrl: (\n    provider: 'bitbucket' | 'github' | 'gitlab' | 'google',\n    token: string\n  ) => string;\n  settings: Settings;\n};\n\nconst [_useIdentityContext, _IdentityCtxProvider] = createCtx<\n  ReactNetlifyIdentityAPI\n>();\nexport const useIdentityContext = _useIdentityContext; // we dont want to expose _IdentityCtxProvider\n\n/** most people should use this provider directly */\nexport function IdentityContextProvider({\n  url,\n  children,\n  onAuthChange = () => {},\n}: {\n  url: string;\n  children: React.ReactNode;\n  onAuthChange?: authChangeParam;\n}) {\n  /******** SETUP */\n  if (!url || !validateUrl(url)) {\n    // just a safety check in case a JS user tries to skip this\n    throw new Error(\n      'invalid netlify instance URL: ' +\n        url +\n        '. Please check the docs for proper usage or file an issue.'\n    );\n  }\n  const identity = useNetlifyIdentity(url, onAuthChange);\n  return (\n    <_IdentityCtxProvider value={identity}>{children}</_IdentityCtxProvider>\n  );\n}\n\n/** some people may want to use this as a hook and bring their own contexts */\nexport function useNetlifyIdentity(\n  url: string,\n  onAuthChange: authChangeParam = () => {},\n  enableRunRoutes: boolean = true\n): ReactNetlifyIdentityAPI {\n  const goTrueInstance = React.useMemo(\n    () =>\n      new GoTrue({\n        APIUrl: `${url}/.netlify/identity`,\n        setCookie: true,\n      }),\n    [url]\n  );\n\n  const [user, setUser] = React.useState<User | undefined>(\n    goTrueInstance.currentUser() || undefined\n  );\n  const _setUser = (_user: User | undefined) => {\n    setUser(_user);\n    onAuthChange(_user); // if someone's subscribed to auth changes, let 'em know\n    return _user; // so that we can continue chaining\n  };\n\n  React.useEffect(() => {\n    if (enableRunRoutes) {\n      runRoutes(goTrueInstance, _setUser);\n    }\n  }, []);\n\n  /******* OPERATIONS */\n  // make sure the Registration preferences under Identity settings in your Netlify dashboard are set to Open.\n  // https://react-netlify-identity.netlify.com/login#access_token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE1NTY0ODY3MjEsInN1YiI6ImNiZjY5MTZlLTNlZGYtNGFkNS1iOTYzLTQ4ZTY2NDcyMDkxNyIsImVtYWlsIjoic2hhd250aGUxQGdtYWlsLmNvbSIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImdpdGh1YiJ9LCJ1c2VyX21ldGFkYXRhIjp7ImF2YXRhcl91cmwiOiJodHRwczovL2F2YXRhcnMxLmdpdGh1YnVzZXJjb250ZW50LmNvbS91LzY3NjQ5NTc_dj00IiwiZnVsbF9uYW1lIjoic3d5eCJ9fQ.E8RrnuCcqq-mLi1_Q5WHJ-9THIdQ3ha1mePBKGhudM0&expires_in=3600&refresh_token=OyA_EdRc7WOIVhY7RiRw5w&token_type=bearer\n  /******* external oauth */\n  type Provider = 'bitbucket' | 'github' | 'gitlab' | 'google';\n\n  const loginProvider = (provider: Provider) => {\n    const url = goTrueInstance.loginExternalUrl(provider);\n    window.location.href = url;\n  };\n  const acceptInviteExternalUrl = (provider: Provider, token: string) =>\n    goTrueInstance.acceptInviteExternalUrl(provider, token);\n  const _settings = goTrueInstance.settings.bind(goTrueInstance);\n  const [settings, setSettings] = React.useState<Settings>(defaultSettings);\n  React.useEffect(() => {\n    _settings().then(x => setSettings(x));\n  }, []);\n\n  /******* email auth */\n  const signupUser = (email: string, password: string, data: Object) =>\n    goTrueInstance.signup(email, password, data).then(_setUser); // TODO: make setUser optional?\n  const loginUser = (\n    email: string,\n    password: string,\n    remember: boolean = true\n  ) => goTrueInstance.login(email, password, remember).then(_setUser);\n  const requestPasswordRecovery = (email: string) =>\n    goTrueInstance.requestPasswordRecovery(email);\n  const recoverAccount = (token: string, remember?: boolean | undefined) =>\n    goTrueInstance.recover(token, remember);\n  const updateUser = (fields: { data: object }) => {\n    if (user == null) {\n      throw new Error('No current user found - are you logged in?');\n    } else {\n      return user!\n        .update(fields) // e.g. { data: { email: \"example@example.com\", password: \"password\" } }\n        .then(_setUser);\n    }\n  };\n  const getFreshJWT = () => {\n    if (!user) throw new Error('No current user found - are you logged in?');\n    return user.jwt();\n  };\n  const logoutUser = () => {\n    if (!user) throw new Error('No current user found - are you logged in?');\n    return user.logout().then(() => _setUser(undefined));\n  };\n\n  const genericAuthedFetch = (method: string) => (\n    endpoint: string,\n    obj = {}\n  ) => {\n    if (!user || !user.token || !user.token.access_token)\n      throw new Error('no user token found');\n    const defaultObj = {\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + user.token.access_token,\n      },\n    };\n    const finalObj = Object.assign(defaultObj, { method }, obj);\n    return fetch(endpoint, finalObj).then(res =>\n      finalObj.headers['Content-Type'] === 'application/json' ? res.json() : res\n    );\n  };\n  const authedFetch = {\n    get: genericAuthedFetch('GET'),\n    post: genericAuthedFetch('POST'),\n    put: genericAuthedFetch('PUT'),\n    delete: genericAuthedFetch('DELETE'),\n  };\n\n  /******* hook API */\n  return {\n    user,\n    /** not meant for normal use! you should mostly use one of the other exported methods to update the user instance */\n    setUser,\n    isConfirmedUser: !!(user && user.confirmed_at),\n    isLoggedIn: !!user,\n    signupUser,\n    loginUser,\n    logoutUser,\n    requestPasswordRecovery,\n    recoverAccount,\n    updateUser,\n    getFreshJWT,\n    authedFetch,\n    _goTrueInstance: goTrueInstance,\n    _url: url,\n    loginProvider,\n    acceptInviteExternalUrl,\n    settings,\n  };\n}\n\n/**\n *\n *\n * Utils\n *\n */\n\nfunction validateUrl(value: string) {\n  return /^(?:(?:(?:https?|ftp):)?\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:[/?#]\\S*)?$/i.test(\n    value\n  );\n}\n\n// lazy initialize contexts without providing a Nullable type upfront\nfunction createCtx<A>() {\n  const ctx = React.createContext<A | undefined>(undefined);\n  function useCtx() {\n    const c = React.useContext(ctx);\n    if (!c) throw new Error('useCtx must be inside a Provider with a value');\n    return c;\n  }\n  return [useCtx, ctx.Provider] as const;\n}\n\n// // Deprecated for now\n// interface NIProps {\n//   children: any\n//   url: string\n//   onAuthChange?: authChangeParam\n// }\n// export default function NetlifyIdentity({ children, url, onAuthChange }: NIProps) {\n//   return children(useNetlifyIdentity(url, onAuthChange))\n// }\n"],"names":["routes","errorRoute","accessTokenRoute","confirmationRoute","runRoutes","gotrue","setUser","remember","hash","document","location","replace","m","match","em","params","split","forEach","pair","key","value","am","cookie","createUser","then","console","error","cm","confirm","defaultSettings","autoconfirm","disable_signup","external","bitbucket","email","facebook","github","gitlab","google","createCtx","_useIdentityContext","_IdentityCtxProvider","useIdentityContext","IdentityContextProvider","url","children","onAuthChange","validateUrl","Error","identity","useNetlifyIdentity","React","enableRunRoutes","goTrueInstance","useMemo","GoTrue","APIUrl","setCookie","useState","currentUser","undefined","user","_setUser","_user","useEffect","loginProvider","provider","loginExternalUrl","window","href","acceptInviteExternalUrl","token","_settings","settings","bind","setSettings","x","signupUser","password","data","signup","loginUser","login","requestPasswordRecovery","recoverAccount","recover","updateUser","fields","update","getFreshJWT","jwt","logoutUser","logout","genericAuthedFetch","method","endpoint","obj","access_token","defaultObj","headers","Accept","Authorization","finalObj","Object","assign","fetch","res","json","authedFetch","get","post","put","isConfirmedUser","confirmed_at","isLoggedIn","_goTrueInstance","_url","test","ctx","createContext","useCtx","c","useContext","Provider"],"mappings":"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"}