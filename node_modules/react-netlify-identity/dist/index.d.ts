import React from 'react';
import GoTrue, { User, Settings } from 'gotrue-js';
declare type authChangeParam = (user?: User) => string | void;
export declare type Settings = Settings;
export declare type User = User;
export declare type ReactNetlifyIdentityAPI = {
    user: User | undefined;
    /** not meant for normal use! you should mostly use one of the other exported methods to update the user instance */
    setUser: React.Dispatch<React.SetStateAction<User | undefined>>;
    isConfirmedUser: boolean;
    isLoggedIn: boolean;
    signupUser: (email: string, password: string, data: Object) => Promise<User | undefined>;
    loginUser: (email: string, password: string, remember?: boolean) => Promise<User | undefined>;
    logoutUser: () => Promise<User | undefined>;
    requestPasswordRecovery: (email: string) => Promise<void>;
    recoverAccount: (token: string, remember?: boolean | undefined) => Promise<User>;
    updateUser: (fields: {
        data: object;
    }) => Promise<User | undefined>;
    getFreshJWT: () => Promise<string>;
    authedFetch: {
        get: (endpoint: string, obj?: {}) => Promise<any>;
        post: (endpoint: string, obj?: {}) => Promise<any>;
        put: (endpoint: string, obj?: {}) => Promise<any>;
        delete: (endpoint: string, obj?: {}) => Promise<any>;
    };
    _goTrueInstance: GoTrue;
    _url: string;
    loginProvider: (provider: 'bitbucket' | 'github' | 'gitlab' | 'google') => void;
    acceptInviteExternalUrl: (provider: 'bitbucket' | 'github' | 'gitlab' | 'google', token: string) => string;
    settings: Settings;
};
export declare const useIdentityContext: () => ReactNetlifyIdentityAPI;
/** most people should use this provider directly */
export declare function IdentityContextProvider({ url, children, onAuthChange, }: {
    url: string;
    children: React.ReactNode;
    onAuthChange?: authChangeParam;
}): JSX.Element;
/** some people may want to use this as a hook and bring their own contexts */
export declare function useNetlifyIdentity(url: string, onAuthChange?: authChangeParam, enableRunRoutes?: boolean): ReactNetlifyIdentityAPI;
export {};
